"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[761],{3905:(t,n,e)=>{e.d(n,{Zo:()=>c,kt:()=>m});var a=e(7294);function l(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function r(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,a)}return e}function i(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?r(Object(e),!0).forEach((function(n){l(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function o(t,n){if(null==t)return{};var e,a,l=function(t,n){if(null==t)return{};var e,a,l={},r=Object.keys(t);for(a=0;a<r.length;a++)e=r[a],n.indexOf(e)>=0||(l[e]=t[e]);return l}(t,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)e=r[a],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(l[e]=t[e])}return l}var p=a.createContext({}),d=function(t){var n=a.useContext(p),e=n;return t&&(e="function"==typeof t?t(n):i(i({},n),t)),e},c=function(t){var n=d(t.components);return a.createElement(p.Provider,{value:n},t.children)},u={inlineCode:"code",wrapper:function(t){var n=t.children;return a.createElement(a.Fragment,{},n)}},s=a.forwardRef((function(t,n){var e=t.components,l=t.mdxType,r=t.originalType,p=t.parentName,c=o(t,["components","mdxType","originalType","parentName"]),s=d(e),m=l,g=s["".concat(p,".").concat(m)]||s[m]||u[m]||r;return e?a.createElement(g,i(i({ref:n},c),{},{components:e})):a.createElement(g,i({ref:n},c))}));function m(t,n){var e=arguments,l=n&&n.mdxType;if("string"==typeof t||l){var r=e.length,i=new Array(r);i[0]=s;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=t,o.mdxType="string"==typeof t?t:l,i[1]=o;for(var d=2;d<r;d++)i[d]=e[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,e)}s.displayName="MDXCreateElement"},4943:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var a=e(7462),l=(e(7294),e(3905));const r={sidebar_position:5},i="Input",o={unversionedId:"building-blocks/input",id:"building-blocks/input",title:"Input",description:"The button component is SfInput. This building block can be used to accept various types of user inputs.",source:"@site/docs/building-blocks/input.md",sourceDirName:"building-blocks",slug:"/building-blocks/input",permalink:"/docs/building-blocks/input",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Button",permalink:"/docs/building-blocks/button"}},p={},d=[{value:"InputType",id:"inputtype",level:2},{value:"Features",id:"features",level:2},{value:"Props",id:"props",level:2},{value:"Usage",id:"usage",level:2},{value:"Imports",id:"imports",level:3},{value:"Usage",id:"usage-1",level:3},{value:"Variants",id:"variants",level:2},{value:"Disabled",id:"disabled",level:2},{value:"Icon",id:"icon",level:2},{value:"Hint",id:"hint",level:2},{value:"Pre-fill Value",id:"pre-fill-value",level:2},{value:"Day / Night Mode",id:"day--night-mode",level:2}],c={toc:d};function u(t){let{components:n,...e}=t;return(0,l.kt)("wrapper",(0,a.Z)({},c,e,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"input"},"Input"),(0,l.kt)("p",null,"The button component is ",(0,l.kt)("strong",{parentName:"p"},"SfInput"),". This building block can be used to accept various types of user inputs."),(0,l.kt)("h2",{id:"inputtype"},"InputType"),(0,l.kt)("p",null,"Types of inputs supported are as follows:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"InputType"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"input field for accepting names")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"email"),(0,l.kt)("td",{parentName:"tr",align:null},"input field for accepting emails")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"mobile"),(0,l.kt)("td",{parentName:"tr",align:null},"input field for accepting mobiles")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"gender"),(0,l.kt)("td",{parentName:"tr",align:null},"input field for accepting gender")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"date"),(0,l.kt)("td",{parentName:"tr",align:null},"input field for accepting date")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"dateOfBirth"),(0,l.kt)("td",{parentName:"tr",align:null},"input field for accepting date of birth")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"searchString"),(0,l.kt)("td",{parentName:"tr",align:null},"input field for accepting search string")))),(0,l.kt)("h2",{id:"features"},"Features"),(0,l.kt)("p",null,"SfInput also has some additional in-built features."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Built-in Validations")," - validation of user input happens according to the inputType as the user types"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Enter Press Handling")," - onEnterPressed callback can be used to detect when the user presses the enter key"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"Day / Night Mode")," - in-built support for day mode and night mode, set using a prop")),(0,l.kt)("h2",{id:"props"},"Props"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Prop"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Mandatory"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"variant"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"yes"),(0,l.kt)("td",{parentName:"tr",align:null},"theme variant such as primary, secondary, danger, etc.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"caption"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"yes"),(0,l.kt)("td",{parentName:"tr",align:null},"button text")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"inputType"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"yes"),(0,l.kt)("td",{parentName:"tr",align:null},'type of input - "name"')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onComplete"),(0,l.kt)("td",{parentName:"tr",align:null},"callback"),(0,l.kt)("td",{parentName:"tr",align:null},"yes"),(0,l.kt)("td",{parentName:"tr",align:null},"callback function when correct input is inserted")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"value"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"value to pre-fill the inputwith")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"onEnterPressed"),(0,l.kt)("td",{parentName:"tr",align:null},"callback"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"callback function when user presses enter key")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"hint"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"placeholder value")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"disabled"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"flag to disable the button")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"autoFocus"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"flag, which sets autofocus on load")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"mode"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},'"day" / "night"')),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"theme"),(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"superflows theme object")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"icon"),(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"bootstrap icon to be shown after the text")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"classNameContainer"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"any classes that need to passed to the container")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"classNameInput"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"any classes that need to passed to the inputs")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"stylesContainer"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"any styles that need to passed to the container")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"stylesInput"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"no"),(0,l.kt)("td",{parentName:"tr",align:null},"any styles that need to passed to the inputs")))),(0,l.kt)("h2",{id:"usage"},"Usage"),(0,l.kt)("h3",{id:"imports"},"Imports"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import {SfInput} from 'react-sf-building-blocks'\n")),(0,l.kt)("h3",{id:"usage-1"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Apps(props) {\n  \n    return (\n        <table>\n            <tbody>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"name\" variant={'primary'} caption={'First Name'} onComplete={(event) => {console.log('clicked', event);}}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"name\" variant={'secondary'} caption={'Last Name'} onComplete={(event) => {console.log('clicked', event);}}/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"email\" variant={'primary'} caption={'Email'} onComplete={(event) => {console.log('clicked', event);}}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"email\" variant={'secondary'} caption={'Email'} onComplete={(event) => {console.log('clicked', event);}}/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"mobile\" variant={'primary'} caption={'Mobile'} onComplete={(event) => {console.log('clicked', event);}}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"mobile\" variant={'secondary'} caption={'Mobile'} onComplete={(event) => {console.log('clicked', event);}}/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"dateOfBirth\" variant={'primary'} caption={'Date of Birth'} onComplete={(event) => {console.log('clicked', event);}}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"dateOfBirth\" variant={'secondary'} caption={'Date of Birth'} onComplete={(event) => {console.log('clicked', event);}}/>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    );\n}\n")),(0,l.kt)("h2",{id:"variants"},"Variants"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Apps(props) {\n  \n    return (\n        <table>\n            <tbody>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"name\" variant={'primary'} caption={'First Name'} onComplete={(event) => {console.log('clicked', event);}}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"name\" variant={'secondary'} caption={'Last Name'} onComplete={(event) => {console.log('clicked', event);}}/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"mobile\" variant={'danger'} caption={'Mobile'} onComplete={(event) => {console.log('clicked', event);}}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"mobile\" variant={'success'} caption={'Mobile'} onComplete={(event) => {console.log('clicked', event);}}/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"email\" variant={'warning'} caption={'Email'} onComplete={(event) => {console.log('clicked', event);}}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"email\" variant={'info'} caption={'Email'} onComplete={(event) => {console.log('clicked', event);}}/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"dateOfBirth\" variant={'dark'} caption={'DoB'} onComplete={(event) => {console.log('clicked', event);}}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"dateOfBirth\" variant={'light'} caption={'DoB'} onComplete={(event) => {console.log('clicked', event);}}/>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    );\n}\n")),(0,l.kt)("h2",{id:"disabled"},"Disabled"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Apps(props) {\n  \n    return (\n        <table>\n            <tbody>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"name\" variant={'primary'} caption={'First Name'} onComplete={(event) => {console.log('clicked', event);}} disabled={true}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"name\" variant={'secondary'} caption={'Last Name'} onComplete={(event) => {console.log('clicked', event);}} disabled={true}/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"email\" variant={'danger'} caption={'Email'} onComplete={(event) => {console.log('clicked', event);}} disabled={true}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"email\" variant={'success'} caption={'Email'} onComplete={(event) => {console.log('clicked', event);}} disabled={true}/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"mobile\" variant={'warning'} caption={'Mobile'} onComplete={(event) => {console.log('clicked', event);}} disabled={true}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"mobile\" variant={'info'} caption={'Mobile'} onComplete={(event) => {console.log('clicked', event);}} disabled={true}/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"dateOfBirth\" variant={'light'} caption={'DoB'} onComplete={(event) => {console.log('clicked', event);}} disabled={true}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"dateOfBirth\" variant={'dark'} caption={'DoB'} onComplete={(event) => {console.log('clicked', event);}} disabled={true}/>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    );\n}\n")),(0,l.kt)("h2",{id:"icon"},"Icon"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx"},"import {CardHeading, EnvelopeFill, PhoneFill, CalendarEventFill} from 'react-bootstrap-icons';\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Apps(props) {\n  \n    return (\n        <table>\n            <tbody>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"name\" variant={'primary'} caption={'First Name'} onComplete={(event) => {console.log('clicked', event);}} icon={<CardHeading />}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"name\" variant={'secondary'} caption={'Last Name'} onComplete={(event) => {console.log('clicked', event);}} icon={<CardHeading />}/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"email\" variant={'danger'} caption={'Email'} onComplete={(event) => {console.log('clicked', event);}} icon={<EnvelopeFill />}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"email\" variant={'success'} caption={'Email'} onComplete={(event) => {console.log('clicked', event);}} icon={<EnvelopeFill />}/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"mobile\" variant={'warning'} caption={'Mobile'} onComplete={(event) => {console.log('clicked', event);}} icon={<PhoneFill />}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"mobile\" variant={'info'} caption={'Mobile'} onComplete={(event) => {console.log('clicked', event);}} icon={<PhoneFill />}/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"dateOfBirth\" variant={'dark'} caption={'DoB'} onComplete={(event) => {console.log('clicked', event);}} icon={<CalendarEventFill />}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"dateOfBirth\" variant={'light'} caption={'DoB'} onComplete={(event) => {console.log('clicked', event);}} icon={<CalendarEventFill />}/>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    );\n}\n")),(0,l.kt)("h2",{id:"hint"},"Hint"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Apps(props) {\n  \n    return (\n        <table>\n            <tbody>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"name\" variant={'primary'} caption={'First Name'} onComplete={(event) => {console.log('clicked', event);}} hint=\"Type here...\"/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"name\" variant={'secondary'} caption={'Last Name'} onComplete={(event) => {console.log('clicked', event);}} hint=\"Type here...\"/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"email\" variant={'danger'} caption={'Email'} onComplete={(event) => {console.log('clicked', event);}} hint=\"abc@def.com\"/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"email\" variant={'success'} caption={'Email'} onComplete={(event) => {console.log('clicked', event);}} hint=\"abc@def.com\"/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"mobile\" variant={'warning'} caption={'Mobile'} onComplete={(event) => {console.log('clicked', event);}} hint=\"+<country-code><number>\"/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"mobile\" variant={'info'} caption={'Mobile'} onComplete={(event) => {console.log('clicked', event);}} hint=\"+<country-code><number>\"/>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    );\n}\n")),(0,l.kt)("h2",{id:"pre-fill-value"},"Pre-fill Value"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Apps(props) {\n  \n    return (\n        <table>\n            <tbody>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"name\" variant={'primary'} caption={'First Name'} onComplete={(event) => {console.log('clicked', event);}} value=\"Sneha\"/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"name\" variant={'secondary'} caption={'Last Name'} onComplete={(event) => {console.log('clicked', event);}} value=\"G\"/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"email\" variant={'danger'} caption={'Email'} onComplete={(event) => {console.log('clicked', event);}} value=\"sneha.g@abc.com\"/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"email\" variant={'success'} caption={'Email'} onComplete={(event) => {console.log('clicked', event);}} value=\"sneha.g@abc.com\"/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"mobile\" variant={'warning'} caption={'Mobile'} onComplete={(event) => {console.log('clicked', event);}} value={{isd: \"+91\", number: '8422334455'}}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"mobile\" variant={'info'} caption={'Mobile'} onComplete={(event) => {console.log('clicked', event);}} value={{isd: \"+91\", number: '8422334455'}}/>\n                    </td>\n                </tr>\n                <tr>\n                    <td>\n                        <SfInput inputType=\"dateOfBirth\" variant={'dark'} caption={'DoB'} onComplete={(event) => {console.log('clicked', event);}} value={{dd: \"10\", mm: \"03\", yyyy: \"1985\"}}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"dateOfBirth\" variant={'light'} caption={'DoB'} onComplete={(event) => {console.log('clicked', event);}} value={{dd: \"10\", mm: \"03\", yyyy: \"1985\"}}/>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    );\n}\n")),(0,l.kt)("h2",{id:"day--night-mode"},"Day / Night Mode"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Apps(props) {\n  \n    return (\n        <table>\n            <tbody>\n                <tr>\n                    <td style={{backgroundColor: 'black'}}>\n                        <SfInput inputType=\"name\" variant={'primary'} caption={'First Name'} onComplete={(event) => {console.log('clicked', event);}} value=\"Sneha\" mode=\"night\"/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"name\" variant={'primary'} caption={'First Name'} onComplete={(event) => {console.log('clicked', event);}} value=\"Sneha\"/>\n                    </td>\n                </tr>\n                <tr>\n                    <td style={{backgroundColor: 'black'}}>\n                        <SfInput inputType=\"email\" variant={'secondary'} caption={'Email'} onComplete={(event) => {console.log('clicked', event);}} value=\"Sneha\" mode=\"night\"/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"email\" variant={'secondary'} caption={'Email'} onComplete={(event) => {console.log('clicked', event);}} value=\"Sneha\"/>\n                    </td>\n                </tr>\n                <tr>\n                    <td style={{backgroundColor: 'black'}}>\n                        <SfInput inputType=\"mobile\" variant={'danger'} caption={'Mobile'} onComplete={(event) => {console.log('clicked', event);}} value=\"Sneha\" mode=\"night\" value={{isd: \"+91\", number: '8422334455'}}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"mobile\" variant={'danger'} caption={'Mobile'} onComplete={(event) => {console.log('clicked', event);}} value=\"Sneha\" value={{isd: \"+91\", number: '8422334455'}}/>\n                    </td>\n                </tr>\n                <tr>\n                    <td style={{backgroundColor: 'black'}}>\n                        <SfInput inputType=\"dateOfBirth\" variant={'light'} caption={'DoB'} onComplete={(event) => {console.log('clicked', event);}} mode=\"night\" value={{dd: \"10\", mm: \"03\", yyyy: \"1985\"}}/>\n                    </td>\n                    <td>\n                        <SfInput inputType=\"dateOfBirth\" variant={'dark'} caption={'DoB'} onComplete={(event) => {console.log('clicked', event);}} value={{dd: \"10\", mm: \"03\", yyyy: \"1985\"}}/>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    );\n}\n")))}u.isMDXComponent=!0}}]);