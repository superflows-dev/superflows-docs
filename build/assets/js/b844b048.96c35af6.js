"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[923],{3905:(t,n,e)=>{e.d(n,{Zo:()=>p,kt:()=>k});var a=e(7294);function r(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function l(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,a)}return e}function i(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?l(Object(e),!0).forEach((function(n){r(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):l(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function o(t,n){if(null==t)return{};var e,a,r=function(t,n){if(null==t)return{};var e,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)e=l[a],n.indexOf(e)>=0||(r[e]=t[e]);return r}(t,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)e=l[a],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(r[e]=t[e])}return r}var d=a.createContext({}),c=function(t){var n=a.useContext(d),e=n;return t&&(e="function"==typeof t?t(n):i(i({},n),t)),e},p=function(t){var n=c(t.components);return a.createElement(d.Provider,{value:n},t.children)},u={inlineCode:"code",wrapper:function(t){var n=t.children;return a.createElement(a.Fragment,{},n)}},s=a.forwardRef((function(t,n){var e=t.components,r=t.mdxType,l=t.originalType,d=t.parentName,p=o(t,["components","mdxType","originalType","parentName"]),s=c(e),k=r,m=s["".concat(d,".").concat(k)]||s[k]||u[k]||l;return e?a.createElement(m,i(i({ref:n},p),{},{components:e})):a.createElement(m,i({ref:n},p))}));function k(t,n){var e=arguments,r=n&&n.mdxType;if("string"==typeof t||r){var l=e.length,i=new Array(l);i[0]=s;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var c=2;c<l;c++)i[c]=e[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,e)}s.displayName="MDXCreateElement"},9839:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var a=e(7462),r=(e(7294),e(3905));const l={sidebar_position:4},i="Button",o={unversionedId:"building-blocks/button",id:"building-blocks/button",title:"Button",description:"The button component is SfButton.",source:"@site/docs/building-blocks/button.md",sourceDirName:"building-blocks",slug:"/building-blocks/button",permalink:"/docs/building-blocks/button",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/docs/building-blocks/install"}},d={},c=[{value:"Props",id:"props",level:2},{value:"Usage",id:"usage",level:2},{value:"Imports",id:"imports",level:3},{value:"Usage",id:"usage-1",level:3},{value:"Variants",id:"variants",level:2},{value:"Disabled",id:"disabled",level:2},{value:"Icon Button",id:"icon-button",level:2}],p={toc:c};function u(t){let{components:n,...e}=t;return(0,r.kt)("wrapper",(0,a.Z)({},p,e,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"button"},"Button"),(0,r.kt)("p",null,"The button component is ",(0,r.kt)("strong",{parentName:"p"},"SfButton"),"."),(0,r.kt)("h2",{id:"props"},"Props"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Prop"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Mandatory"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"variant"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"theme variant such as primary, secondary, danger, etc.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"theme type such as filled or outlined")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"caption"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"button text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"onClick"),(0,r.kt)("td",{parentName:"tr",align:null},"callback"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"onClick callback function")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"disabled"),(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"flag to disable the button")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"theme"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"superflows theme object")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"icon"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"bootstrap icon to be shown after the text")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"className"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"any classes that need to passed")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"styles"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"any styles that need to passed")))),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("h3",{id:"imports"},"Imports"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { SfButton } from 'react-sf-building-blocks'\n")),(0,r.kt)("h3",{id:"usage-1"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Apps(props) {\n  \n    return (\n        <table>\n            <tr>\n                <td>\n                    <SfButton variant={'primary'} type={'filled'} caption={'Next'} onClick={(event) => {alert('clicked');}}/>\n                </td>\n                <td>\n                    <SfButton variant={'primary'} type={'outlined'} caption={'Next'} onClick={(event) => {alert('clicked');}}/>\n                </td>\n            </tr>\n        </table>\n    );\n}\n")),(0,r.kt)("h2",{id:"variants"},"Variants"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Apps(props) {\n  \n    return (\n        <table>\n            <tr>\n                <td>\n                    <SfButton variant={'primary'} type={'filled'} caption={'Primary Filled'} onClick={(event) => {alert('clicked');}}/>\n                </td>\n                <td>\n                    <SfButton variant={'primary'} type={'outlined'} caption={'Primary Outlined'} onClick={(event) => {alert('clicked');}}/>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <SfButton variant={'secondary'} type={'filled'} caption={'Secondary Filled'} onClick={(event) => {alert('clicked');}}/>\n                </td>\n                <td>\n                    <SfButton variant={'secondary'} type={'outlined'} caption={'Secondary Outliined'} onClick={(event) => {alert('clicked');}}/>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <SfButton variant={'danger'} type={'filled'} caption={'Danger Filled'} onClick={(event) => {alert('clicked');}}/>\n                </td>\n                <td>\n                    <SfButton variant={'danger'} type={'outlined'} caption={'Danger Outlined'} onClick={(event) => {alert('clicked');}}/>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <SfButton variant={'success'} type={'filled'} caption={'Success Filled'} onClick={(event) => {alert('clicked');}}/>\n                </td>\n                <td>\n                    <SfButton variant={'success'} type={'outlined'} caption={'Success Outlined'} onClick={(event) => {alert('clicked');}}/>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <SfButton variant={'warning'} type={'filled'} caption={'Warning Filled'} onClick={(event) => {alert('clicked');}}/>\n                </td>\n                <td>\n                    <SfButton variant={'warning'} type={'outlined'} caption={'Warning Outlined'} onClick={(event) => {alert('clicked');}}/>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <SfButton variant={'dark'} type={'filled'} caption={'Dark Filled'} onClick={(event) => {alert('clicked');}}/>\n                </td>\n                <td>\n                    <SfButton variant={'dark'} type={'outlined'} caption={'Dark Outlined'} onClick={(event) => {alert('clicked');}}/>\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    <SfButton variant={'light'} type={'filled'} caption={'Light Filled'} onClick={(event) => {alert('clicked');}}/>\n                </td>\n                <td>\n                    <SfButton variant={'light'} type={'outlined'} caption={'Light Outlined'} onClick={(event) => {alert('clicked');}}/>\n                </td>\n            </tr>\n        </table>\n    );\n}\n")),(0,r.kt)("h2",{id:"disabled"},"Disabled"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Apps(props) {\n  \n    return (\n        <table>\n            <tr>\n                <td>\n                    <SfButton variant={'primary'} type={'filled'} caption={'Primary Filled'} disabled={true} onClick={(event) => {alert('clicked');}}/>\n                </td>\n                <td>\n                    <SfButton variant={'primary'} type={'outlined'} caption={'Primary Outlined'} disabled={true} onClick={(event) => {alert('clicked');}}/>\n                </td>\n            </tr>\n        </table>\n    );\n}\n")),(0,r.kt)("h2",{id:"icon-button"},"Icon Button"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react'\nimport { SfButton } from 'react-sf-building-blocks'\nimport {ArrowRight} from 'react-bootstrap-icons';\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Apps(props) {\n  \n    return (\n        <table>\n            <tr>\n                <td>\n                    <SfButton variant={'primary'} type={'filled'} caption={'Primary Filled'} onClick={(event) => {alert('clicked');}} icon={<ArrowRight />}/>\n                </td>\n                <td>\n                    <SfButton variant={'primary'} type={'outlined'} caption={'Primary Outlined'} onClick={(event) => {alert('clicked');}} icon={<ArrowRight />}/>\n                </td>\n            </tr>\n        </table>\n    );\n}\n")))}u.isMDXComponent=!0}}]);